// Завдання 6/48
// Функція filterArray(numbers, value) приймає масив чисел numbers і повертає новий масив, в якому будуть тільки ті елементи оригінального масиву, які більші за значення параметра value.

// Виконай рефакторинг функції таким чином, щоб замість циклу for, вона використовувала метод forEach.

// Оголошена функція filterArray(numbers, value)
// Для перебирання масиву numbers використаний метод forEach
// Виклик функції filterArray([1, 2, 3, 4, 5], 3) повертає [4, 5]
// Виклик функції filterArray([1, 2, 3, 4, 5], 4) повертає [5]
// Виклик функції filterArray([1, 2, 3, 4, 5], 5) повертає []
// Виклик функції filterArray([12, 24, 8, 41, 76], 38) повертає [41, 76]
// Виклик функції filterArray([12, 24, 8, 41, 76], 20) повертає [24, 41, 76]
// Виклик функції з випадковими, але валідними аргументами, повертає правильне значення

function filterArray(numbers, value) {
  const filteredNumbers = [];
  // Change code below this line

//   for (let i = 0; i < numbers.length; i += 1) {
//     if (numbers[i] > value) {
//       filteredNumbers.push(numbers[i]);
//     }
//   }
    numbers.forEach(itm => {
        if (itm > value) {filteredNumbers.push(itm)}
    });
    console.log(filteredNumbers);
  // Change code above this line
  return filteredNumbers;
}

filterArray([1, 2, 3, 4, 5], 3);
// повертає[4, 5]
// Виклик функції
filterArray([1, 2, 3, 4, 5], 4);
// повертає[5]
// Виклик функції
filterArray([1, 2, 3, 4, 5], 5);
// повертає[]
// Виклик функції
filterArray([12, 24, 8, 41, 76], 38);
// повертає[41, 76]
// Виклик функції
filterArray([12, 24, 8, 41, 76], 20);
// повертає[24, 41, 76]
// Виклик функції з випадковими, але валідними аргументами, повертає правильне значення.Результатом виклику функції
filterArray([17, 16, 21, 18, 11, 19, 6, 8, 13, 10, 5, 22, 19, 20, 12, 6, 21, 13, 20], 15)
// буде[17, 16, 21, 18, 19, 22, 19, 20, 21, 20]